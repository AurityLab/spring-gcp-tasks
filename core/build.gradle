plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"

    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.41"
    id "kotlinx-serialization" version "1.3.41"

    id "org.gradle.maven-publish"
    id "nu.studer.credentials" version "1.0.7"
}

group "com.auritylab.spring.gcp.tasks"
version "0.1.0-SNAPSHOT"
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
}

ext {
    set('springCloudVersion', "Greenwich.SR2")
}

configurations {
    ktlint
}

dependencies {
    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9"

    // spring
    implementation "org.springframework:spring-web:5.1.8.RELEASE"
    implementation "org.springframework.cloud:spring-cloud-gcp-starter"

    // gcp
    implementation "com.google.cloud:google-cloud-tasks"

    // kotlinx.serialization
    api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.11.1"

    // ktlint
    ktlint("com.pinterest:ktlint:0.33.0")
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}") {
            bomProperty "google-cloud-bom.version", "0.99.0-alpha"
        }
    }
    /*dependencies {
        // See https://github.com/googleapis/google-cloud-java/issues/5555
        dependency "com.google.api:gax-grpc:1.47.0"
        dependency "com.google.api:gax:1.47.0"
    }*/
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "http://nexus.auritylab.com:8081/repository/maven-private/"
            credentials {
                username project.credentials.getProperty("auritylab.nexus.username").toString()
                password project.credentials.getProperty("auritylab.nexus.password").toString()
            }
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint
test.dependsOn ktlint

compileKotlin {
    kotlinOptions.freeCompilerArgs = getCompilerArguments()
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.freeCompilerArgs = getCompilerArguments()
    kotlinOptions.jvmTarget = "1.8"
}

static def getCompilerArguments() {
    List<String> list = new ArrayList<>()

    list.add("-Xjsr305=strict")
    list.add("-Xuse-experimental=kotlin.Experimental")

    return list
}
